{
    "#99917d": [
        "bft_consensus_protocols",
        "tolerant_bft_consensus",
        "abstraction_bft_consensus",
        "increased_latency_consensus",
        "dissemination_aggregation_trees",
        "consensus_protocols_ii",
        "fault_tolerant_bft",
        "multiple_consensus_instances",
        "processed_reach_consensus",
        "context_consensus_protocols"
    ],
    "#fd3346": [
        "circumvent_impossibility_consensus",
        "byzantine_fault_model",
        "assume_partial_synchrony",
        "consensus_assume_partial",
        "delivers_implemented_using",
        "mechanisms_message_transmission",
        "public_key_infrastructure",
        "worst_case_network",
        "assume_composed_server",
        "global_stabilization_time"
    ],
    "#80f20b": [
        "based_consensus_algorithms",
        "reliable_dissemination_guaranteed",
        "aggregation_communicating_tree",
        "consensus_communication_rounds",
        "leader_based_consensus",
        "reaches_consensus_communication",
        "satisfying_reliable_dissemination",
        "guarantees_reliable_dissemination",
        "new_consensus_algorithm",
        "collect_byzantine_quorum"
    ],
    "#933b5d": [
        "consensus_communication_rounds",
        "satisfying_reliable_dissemination",
        "reaches_consensus_communication",
        "information_quorum_replicas",
        "broadcast_data_leader",
        "broadcasts_commit_quorum",
        "achieve_reliable_dissemination",
        "hotstuf_reaches_consensus",
        "reliable_dissemination_similar",
        "reliable_dissemination_fulfillment"
    ],
    "#96eb10": [
        "condition_achieve_consensus",
        "tree_implement_broadcastmsg",
        "nodes_send_signatures",
        "achieve_consensus_fact",
        "robust_leader_process",
        "robust_internal_nodes",
        "consensus_reached_long",
        "aggregates_signatures_sends",
        "nodes_including_leader",
        "computed_root_tree"
    ],
    "#aad755": [
        "aggregation_communicating_tree",
        "impatient_channels_implemented",
        "communicating_tree_processes",
        "worst_case_network",
        "perform_aggregation_communicating",
        "tree_cryptographic_primitives",
        "gst_sender_receiver",
        "use_ensures_receiver",
        "propagate_information_tree",
        "use_tree_communicate"
    ],
    "#06d1af": [
        "impatient_channels_implemented",
        "worst_case_network",
        "gst_sender_receiver",
        "validity_process_delivers",
        "case_network_latency",
        "receiver_processes_respectively",
        "value_sent_algorithm",
        "tagging_corresponding_messages",
        "edge_sent_termination",
        "implemented_perfect_channels"
    ],
    "#5a9efb": [
        "guarantees_reliable_dissemination",
        "collect_byzantine_quorum",
        "aggregate_signatures_propagated",
        "reliable_dissemination_implementing",
        "reliable_dissemination_guaranteed",
        "implementation_broadcastmsg_tree",
        "forwarded_leader_model",
        "reliable_dissemination_proof",
        "robust_tree_ensures",
        "scalability_kauri_mitigates"
    ],
    "#dea417": [
        "latency_trees_allow",
        "eficient_scalable_evaluation",
        "configuration_robust_leader",
        "round_trip_broadcastmsg",
        "topology_eficient_scalable",
        "trees_allow_distribute",
        "increased_latency_trees",
        "hotstuf_tree_topology",
        "distribute_load_processes",
        "large_introduce_reconfiguration"
    ],
    "#c1ea40": [
        "information_pipelined_consensus",
        "parallel_consensus_instances",
        "pipelined_consensus_instances",
        "information_parallel_consensus",
        "round_dissemination_aggregation",
        "execution_single_consensus",
        "instance_consensus_piggybacking",
        "information_consensus_instances",
        "rounds_instance_consensus",
        "consensus_implement_pipelining"
    ],
    "#dc2bf9": [
        "information_pipelined_consensus",
        "instance_consensus_piggybacking",
        "pipelined_consensus_instances",
        "round_dissemination_aggregation",
        "consensus_instances_hotstuf",
        "consensus_implement_pipelining",
        "round_messages_consensus",
        "consensus_instance_second",
        "consensus_piggybacking_round",
        "messages_consensus_instance"
    ],
    "#6140de": [
        "information_consensus_instances",
        "execution_single_consensus",
        "carries_information_consensus",
        "multiple_instances_consensus",
        "consensus_execution_single",
        "given_consensus_instance",
        "consensus_instances_rounds",
        "consensus_instance_note",
        "instances_consensus_execution",
        "dissemination_phase_faster"
    ],
    "#965e6b": [
        "additional_consensus_instances",
        "tree_rtt_network",
        "consensus_instances_challenge",
        "start_additional_consensus",
        "additional_consensus_instance",
        "consensus_instances_started",
        "network_latency_processing",
        "consensus_instance_started",
        "aggregate_votes_receives",
        "number_additional_consensus"
    ],
    "#9f7432": [
        "leader_based_protocol",
        "guaranteeing_robust_tree",
        "scalability_throughput_properties",
        "based_hotstuf_protocol",
        "communicate_faults_asynchronous",
        "robust_static_graphs",
        "graphs_trees_ensure",
        "trees_robust_reconfigurations",
        "use_tree_communicate",
        "tree_tbounded_conformity"
    ],
    "#f850e7": [
        "graphs_trees_ensure",
        "conformity_recurringly_robust",
        "robust_static_graphs",
        "used_processes_communicate",
        "eventually_robust_tree",
        "static_graphs_trees",
        "trees_ensure_eventually",
        "small_number_reconfigurations",
        "evolving_graph_bounded",
        "ensure_eventually_robust"
    ],
    "#fda2d6": [
        "guaranteeing_robust_tree",
        "following_round_robin",
        "tree_tbounded_conformity",
        "long_proof_bins",
        "exclusively_correct_nodes",
        "large_contain_processes",
        "value_balanced_tree",
        "algorithm_achieves_bounded",
        "nodes_tree_limits",
        "bin_tree_built"
    ],
    "#c8c8ec": [
        "value_balanced_tree",
        "large_contain_processes",
        "nodes_tree_limits",
        "achieve_bounded_conformity",
        "algorithm_allows_achieve",
        "balanced_tree_fanout",
        "internal_nodes_tree",
        "approach_bin_large",
        "allows_achieve_bounded",
        "tree_limits_number"
    ],
    "#5a1cd2": [
        "based_hotstuf_protocol",
        "steps_robust_tree",
        "scalability_throughput_properties",
        "conformity_able_reconfigure",
        "faults_large_recovers",
        "scenario_kauri_performs",
        "algorithm_achieve_bounded",
        "non_faulty_leader",
        "robust_tree_kauri",
        "quickly_losing_scalability"
    ],
    "#b21d5b": [
        "dissemination_phase_consensus",
        "hotstuf_mechanisms_consensus",
        "nodes_aggregate_verify",
        "mechanisms_consensus_reached",
        "consensus_instance_current",
        "phase_consensus_instance",
        "availability_overall_implementation",
        "scheme_1available_htps",
        "construct_tree_sends",
        "time_start_dissemination"
    ],
    "#ea8a54": [
        "consensus_instances_parallel",
        "globally_distributed_blockchain",
        "consecutive_trees_consensus",
        "power_latency_consensus",
        "kauri_pipeline_consensus",
        "dissemination_aggregation_parallelism",
        "resilientdb_geobft_protocol",
        "consensus_bound_rtt",
        "pipeline_consensus_instances",
        "bandwidth_rtt_clusters"
    ],
    "#06fa46": [
        "globally_distributed_blockchain",
        "approximates_balanced_tree",
        "2available_htps_github",
        "models_globally_distributed",
        "distributed_blockchain_used",
        "permissioned_blockchains_large",
        "bandwidth_national_deployment",
        "global_deployment_models",
        "nodes_results_trees",
        "grid_5000_testbed"
    ],
    "#d04c74": [
        "bandwidth_rtt_scenarios",
        "compute_kauri_pipelining",
        "used_compute_target",
        "250_plus_signatures",
        "rtt_scenarios_blocks",
        "following_rationale_introduced",
        "experimentally_sending_time",
        "experimented_block_sizes",
        "target_pipelining_stretch",
        "results_presented_sections"
    ],
    "#e75e0d": [
        "global_global_tr",
        "empirically_observed_blocksize",
        "stretch_kauri_throughput",
        "rtt_25_bandwidth",
        "results_achieved_pipelining",
        "instances_transactions_instances",
        "scenario_200_rtt",
        "sending_time_smaller",
        "block_sizes_sending",
        "throughput_achieved_using"
    ],
    "#db2841": [
        "trees_bls_signatures",
        "considers_computation_dissemination",
        "nodes_global_scenario",
        "mechanism_outperforms_hotstuf",
        "performance_tree_based",
        "standard_implementation_variant",
        "global_200_rtt",
        "400_nodes_global",
        "large_numbers_participants",
        "leveraging_capacity_pipelining"
    ],
    "#85e007": [
        "throughput_evolution_rtt",
        "available_computing_network",
        "tree_based_approaches",
        "rtt_inherent_tree",
        "pipelining_allows_kauri",
        "scenario_100_bandwidth",
        "computing_network_resources",
        "observe_throughput_evolution",
        "stretch_avoid_leader",
        "observed_throughput_hotstuf"
    ],
    "#8beabb": [
        "power_latency_consensus",
        "dissemination_aggregation_parallelism",
        "consensus_bound_rtt",
        "latency_consensus_bound",
        "tree_confirm_set",
        "time_dissemination_aggregation",
        "aggregation_parallelism_enabled",
        "communication_hops_required",
        "parallelism_enabled_tree",
        "bandwidth_constrained_scenarios"
    ],
    "#384d32": [
        "hotstuf_latency_surpasses",
        "using_tree_spread",
        "throughput_scenarios_confirms",
        "avoid_bottleneck_leader",
        "away_cpu_network",
        "latency_surpasses_kauri",
        "latency_throughput_scenarios",
        "higher_level_pipelining",
        "global_scenario_100",
        "spread_load_avoid"
    ],
    "#a5a230": [
        "scenarios_better_latency",
        "systems_share_sending",
        "bandwidth_deployed_hotsufsecp",
        "tree_height_throughput",
        "bls_outperform_hotstuf",
        "kauri_throughput_doubles",
        "bandwidth_constrained_scenarios",
        "latency_variants_hotstuf",
        "observation_corroborates_experiments",
        "factor_throughput_latency"
    ],
    "#62ff37": [
        "consensus_instances_parallel",
        "kauri_pipeline_consensus",
        "resilientdb_geobft_protocol",
        "pipeline_consensus_instances",
        "bandwidth_rtt_clusters",
        "bft_worth_noting",
        "independent_blockchains_opted",
        "geobft_protocol_available",
        "deployed_local_clusters",
        "latency_hotstuf_variants"
    ],
    "#578cac": [
        "consecutive_trees_consensus",
        "dissemination_regular_hotstuf",
        "process_prevent_consensus",
        "consensus_reached_trees",
        "star_stabilizes_throughput",
        "leaders_star_networks",
        "trees_consensus_reached",
        "kauri_message_dissemination",
        "prevent_consensus_reached",
        "leader_nodes_ifrst"
    ],
    "#63ae31": [
        "dissemination_aggregation_trees",
        "consensus_kauri_throughput",
        "resilience_finality_consensus",
        "provided_dissemination_aggregation",
        "permissioned_blockchains_sufer",
        "bd_project_cosmos",
        "outperforms_hotstuf_throughput",
        "bandwidth_constrained_scenarios",
        "finality_consensus_kauri",
        "fct_project_uidb"
    ]
}